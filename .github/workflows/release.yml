name: Build and Release

on:
  workflow_dispatch: # Manual trigger only

jobs:
  build-and-release:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build applications for Windows and Linux
      run: npm run dist:win && npm run dist
      
    - name: Get version from package.json
      id: package-version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Create and push tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ steps.package-version.outputs.version }}" -m "Release v${{ steps.package-version.outputs.version }}"
        git push origin "v${{ steps.package-version.outputs.version }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.version }}
        release_name: Victory SSM v${{ steps.package-version.outputs.version }}
        body: |
          ## Victory SSM v${{ steps.package-version.outputs.version }}
          
          _Guide for Windows users:_
          - Victory SSM ${{ steps.package-version.outputs.version }}.exe is Portable version (You can use it without install it)
          - Victory Setup ${{ steps.package-version.outputs.version }}.exe is Setup version (You can install it to your devices)
          
          _Notes:_
          - Consider .deb (Ubuntu / Debian) format is untested 
          - Same with the Windows setup version, since I don't have the funds to sign the app. I only rely on the built in signtool, so it will show a warning (To run click "More Info" then Run Anyway)
        draft: false
        prerelease: false
        
    - name: Upload Linux AppImage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Victory SSM-${{ steps.package-version.outputs.version }}.AppImage
        asset_name: Victory-SSM-${{ steps.package-version.outputs.version }}.AppImage
        asset_content_type: application/octet-stream
        
    - name: Upload Linux deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/victory-ssm_${{ steps.package-version.outputs.version }}_amd64.deb
        asset_name: victory-ssm_${{ steps.package-version.outputs.version }}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package
        
    - name: Upload Linux pacman
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/victory-ssm-${{ steps.package-version.outputs.version }}.pacman
        asset_name: victory-ssm-${{ steps.package-version.outputs.version }}.pacman
        asset_content_type: application/octet-stream
        
    - name: Upload Windows Portable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Victory SSM ${{ steps.package-version.outputs.version }}.exe
        asset_name: Victory SSM ${{ steps.package-version.outputs.version }}.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Windows Setup
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Victory Setup ${{ steps.package-version.outputs.version }}.exe
        asset_name: Victory Setup ${{ steps.package-version.outputs.version }}.exe
        asset_content_type: application/octet-stream